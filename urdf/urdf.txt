
Building intermediary matrices...
  changing 1.57079632679000 to pi/2
  changing -1.57079632679000 to -pi/2

Building direct kinematic model...
  T 1/0
  T 2/0
  T 3/0

Building differential kinematic model...
   J_3
   J_1
   J_2


Building pose C code...

    // Generated pose code

    const double c1 = cos(q[0]);
    const double c2 = cos(q[1]);
    const double s1 = sin(q[0]);
    const double s2 = sin(q[1]);

    T[0][0] = c1*c2;
    T[0][1] = -s1;
    T[0][2] = -s2*c1;
    T[0][3] = -q[2]*s2*c1;
    T[1][0] = s1*c2;
    T[1][1] = c1;
    T[1][2] = -s1*s2;
    T[1][3] = -q[2]*s1*s2;
    T[2][0] = s2;
    T[2][1] = 0;
    T[2][2] = c2;
    T[2][3] = q[2]*c2 + 0.5;
    T[3][0] = 0;
    T[3][1] = 0;
    T[3][2] = 0;
    T[3][3] = 1;
    // End of pose code

Building Jacobian C code...

    // Generated Jacobian code

    const double c1 = cos(q[0]);
    const double c2 = cos(q[1]);
    const double s1 = sin(q[0]);
    const double s2 = sin(q[1]);

    J[0][0] = q[2]*s1*s2;
    J[0][1] = -q[2]*c1*c2;
    J[0][2] = -s2*c1;
    J[1][0] = -q[2]*s2*c1;
    J[1][1] = -q[2]*s1*c2;
    J[1][2] = -s1*s2;
    J[2][0] = 0;
    J[2][1] = -q[2]*s2;
    J[2][2] = c2;
    J[3][0] = 0;
    J[3][1] = s1;
    J[3][2] = 0;
    J[4][0] = 0;
    J[4][1] = -c1;
    J[4][2] = 0;
    J[5][0] = 1;
    J[5][1] = 0;
    J[5][2] = 0;
    // End of Jacobian code

Building wMe code...

    // Generated end-effector code

    wMe[0][0] = 1;
    wMe[0][1] = 0;
    wMe[0][2] = 0;
    wMe[0][3] = 0;
    wMe[1][0] = 0;
    wMe[1][1] = 1;
    wMe[1][2] = 0;
    wMe[1][3] = 0;
    wMe[2][0] = 0;
    wMe[2][1] = 0;
    wMe[2][2] = 1;
    wMe[2][3] = 0.100000000000000;
    wMe[3][0] = 0;
    wMe[3][1] = 0;
    wMe[3][2] = 0;
    wMe[3][3] = 1;
    // End of end-effector code

Building bM0 code...

    // Generated base frame code

    bM0[0][0] = 1;
    bM0[0][1] = 0;
    bM0[0][2] = 0;
    bM0[0][3] = 0;
    bM0[1][0] = 0;
    bM0[1][1] = 1;
    bM0[1][2] = 0;
    bM0[1][3] = 0;
    bM0[2][0] = 0;
    bM0[2][1] = 0;
    bM0[2][2] = 1;
    bM0[2][3] = 0;
    bM0[3][0] = 0;
    bM0[3][1] = 0;
    bM0[3][2] = 0;
    bM0[3][3] = 1;
    // End of base frame code
